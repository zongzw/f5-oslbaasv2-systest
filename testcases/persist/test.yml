
- set_fact:
    test_casename: "persistence test"
    test_listener_protocol: HTTP
    test_pool_protocol: HTTP
    test_listener_tcpport: 80
    test_healthmonitor_protocol: PING

- import_tasks: ../../playbooks/task-define-resources.yml

- import_tasks: ../../playbooks/task-create-resources.yml

- import_tasks: ../../playbooks/task-get-resourceids.yml

- set_fact:
    jsession_id: "{{ groups['pool1'][0] | hash('sha1') }}"
- debug: msg="{{ jsession_id }}"

- name: "now, the response is randomly from {{ groups['pool1'] | join(' ') }}"
  shell: |
    curl -I -v http://{{ vip_address.stdout }}:{{ test_listener_tcpport }} -H "Cookie: JSESSIONID={{ jsession_id }}" | grep "Set-Cookie: "
  args:
    warn: no
  register: curl_results
  loop_control:
    label: "{{ item }}: http://{{ vip_address.stdout }}:{{ test_listener_tcpport }} -H 'Cookie: JSESSIONID={{ jsession_id }}'"
  with_items: "{{ range(0, 10, 1) | list }}"
  delegate_to: "{{ groups['clients_ipv4'][0] }}"

- set_fact:
    unique_responses: "{{ curl_results.results | map(attribute='stdout') | unique | list }}"
- debug: msg="{{unique_responses}}"
- assert:
    that: 
      - unique_responses | length > 1
  when: groups['pool1'] | length > 1

- import_tasks: ./http_cookie.yml

- import_tasks: ./app_cookie.yml

- import_tasks: ./source_ip.yml

- import_tasks: ./no-session-persistence.yml

- import_tasks: ../../playbooks/task-remove-resources.yml