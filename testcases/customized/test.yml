
- set_fact:
    test_casename: "customized(http-profile) test"
    test_listener_protocol: HTTP
    test_pool_protocol: HTTP
    test_listener_tcpport: 80
    test_healthmonitor_protocol: PING
    test_listener_additional_options: "--customized '{\"http_profile\": {\"insertXforwardedFor\": \"disabled\"}}'"
    test_loadbalancer_additional_options: "--flavor 6"

- import_tasks: ../../playbooks/task-define-resources.yml

- import_tasks: ../../playbooks/task-create-resources.yml

- import_tasks: ../../playbooks/task-get-resourceids.yml

- name: collect resources from bigip
  bigip_device_info:
    gather_subset:
      - http-profiles
      - virtual-servers
    provider:
      user: admin
      server: "{{ item }}"
      password: "{{ hostvars[item].admin_password }}"
      validate_certs: False
  register: bigip_infos
  with_items: "{{ groups['bigips'] }}"
  delegate_to: localhost

# - debug: msg={{ bigip_infos }}

- name: assert http_profile insert_x_forwarded_for is no
  assert:
    that:
      - "{{ item | json_query(query_string) | length }} == 1"
      - "(item | json_query(query_string))[0].insert_x_forwarded_for == 'no'"
    quiet: yes
  vars:
    query_string: "http_profiles[?name == 'http_profile_{{ environment_prefix }}_{{ listener_id }}']"
  with_items: "{{ bigip_infos.results }}"
  loop_control:
    label: "http_profile_{{ environment_prefix }}_{{ listener_id }}"

# TODO: remove shell, and add name tag.
- shell: |
    rpm -qa | grep f5 | grep agent
  register: agent_version

- name: check VS is binding to /Common/request-log profile
  assert:
    that:
      - "{{ item | json_query(query_vs_string) | length }} == 1"
      - "{{ ((item | json_query(query_vs_string))[0] | json_query(query_profile_string)) | length}} != 0"
    quiet: yes
  vars:
    query_vs_string: "virtual_servers[?name == '{{ environment_prefix }}_{{ listener_id }}']"
    query_profile_string: "profiles[?name == 'request-log' && context == 'all' && full_path == '/Common/request-log']"
  with_items: "{{ bigip_infos.results }}"
  loop_control:
    label: "{{ environment_prefix }}_{{ listener_id }}"
  when: "'9.9' in ( agent_version.stdout )"

# TODO: failed test
# - name: check the created VS properties with flavor value set
#   assert:
#     that:
#       - "{{ item | json_query(query_string) | length }} == 1"
#       - "(item | json_query(query_string))[0].connection_limit == 200000"
#       - "(item | json_query(query_string))[0].rate_limit == 20000"
#       - "(item | json_query(query_string))[0].rate_limit_destination_mask == 0"
#       - "(item | json_query(query_string))[0].rate_limit_mode == 'object'"
#       - "(item | json_query(query_string))[0].rate_limit_source_mask == 0"
#     quiet: yes
#   vars:
#     query_string: "virtual_servers[?name == '{{ environment_prefix }}_{{ listener_id }}']"
#   with_items: "{{ bigip_infos.results }}"
#   loop_control:
#     label: "{{ environment_prefix }}_{{ listener_id }}"

- name: "change {{ loadbalancer }} to flavor 3"
  shell: |
    source {{ openrc }} && \
    neutron lbaas-loadbalancer-update --flavor 3 {{ loadbalancer }} && \
    bash /tmp/scripts/wait_assert_lb_active.sh {{ loadbalancer }}

- name: collect resources from bigip
  bigip_device_info:
    gather_subset:
      - virtual-servers
    provider:
      user: admin
      server: "{{ item }}"
      password: "{{ hostvars[item].admin_password }}"
      validate_certs: False
  register: bigip_infos
  with_items: "{{ groups['bigips'] }}"
  delegate_to: localhost

# TODO: failed test
# - name: check the VS properties changed after lbaas-loadbalancer-update --flavor 3
#   assert:
#     that:
#       - "{{ item | json_query(query_string) | length }} == 1"
#       - "(item | json_query(query_string))[0].connection_limit == 20000"
#       - "(item | json_query(query_string))[0].rate_limit == 2000"
#       - "(item | json_query(query_string))[0].rate_limit_destination_mask == 0"
#       - "(item | json_query(query_string))[0].rate_limit_mode == 'object'"
#       - "(item | json_query(query_string))[0].rate_limit_source_mask == 0"
#     quiet: yes
#   vars:
#     query_string: "virtual_servers[?name == '{{ environment_prefix }}_{{ listener_id }}']"
#   with_items: "{{ bigip_infos.results }}"
#   loop_control:
#     label: "{{ environment_prefix }}_{{ listener_id }}"

- name: "Check {{ test_listener_protocol }} {{ test_listener_tcpport }} is reachable"
  shell: curl http://{{ vip_address.stdout }}:{{ test_listener_tcpport }}
  args:
    warn: no
  delegate_to: "{{ item }}"
  with_items: "{{groups['clients_ipv4']}}"
  when: test_env == 'osp'

- import_tasks: ../../playbooks/task-remove-resources.yml