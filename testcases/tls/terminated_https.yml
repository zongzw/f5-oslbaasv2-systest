- set_fact:
    test_casename: "TERMINATED_HTTPS test"
    test_pool_protocol: HTTP
    test_listener_protocol: TERMINATED_HTTPS
    test_listener_tcpport: 443
    test_listener_additional_options: --default-tls-container={{ server_container1_href }}
    test_healthmonitor_protocol: HTTP
    cipher_suites: ECDHE-RSA-AES128-GCM-SHA256

- name: get agent version
  shell: |
    rpm -qa | grep f5 | grep agent
  register: agent_version

- set_fact:
    test_listener_additional_options: --default-tls-container={{ server_container1_href }} --tls-protocols TLS1.2 --cipher-suites {{ cipher_suites }}
  when: "( agent_version.stdout | regex_search('(?<=-)[\\d.]+(?=-)') ) >= '9.9.30'"

- import_tasks: ../../playbooks/task-define-resources.yml

- import_tasks: ../../playbooks/task-create-resources.yml

- import_tasks: ../../playbooks/task-get-resourceids.yml

# TODO: failed, need to check the reason
# - import_tasks: ./check_cipher.yml
#   when: "( agent_version.stdout | regex_search('(?<=-)[\\d.]+(?=-)') ) >= '9.9.30'"

# TODO: (only for agent >v9.9.30) check cipher and cipher-suite is customized.
# hints:
  # 1. add to 'test_listener_additional_options': --tls-protocols TLS1.2 --cipher-suites ECDHE-RSA-AES128-GCM-SHA256
  # 2. check the client ssl profile properties.
  #   "ciphers": [
  #       "ECDHE-RSA-AES128-GCM-SHA256"
  #   ],
  #   and "tmOptions": "{ dont-insert-empty-fragments no-tlsv1.3 }",

- name: Get certs from an https port
  community.crypto.get_certificate:
    host: "{{ vip_address.stdout }}"
    server_name: server{{ item }}.f5.oslbaas.systest
    port: "{{ test_listener_tcpport }}"
    ca_cert: /tmp/kps/ca.crt
  register: certs
  with_items: "{{ range(1, 6, 1) | list }}"

- name: assert server certificate is valid
  assert:
    that:
      - certs.results[0].issuer.C == 'CN'
      - certs.results[0].issuer.O == 'F5China'
      - certs.results[0].issuer.emailAddress == 'a.zong@f5.com'
      - certs.results[0].subject.CN == 'server1.f5.oslbaas.systest'
      - certs.results[1].subject.CN == 'server1.f5.oslbaas.systest' # domain name not found, thus default to server1
      - certs.results[2].subject.CN == 'server1.f5.oslbaas.systest' # domain name not found, thus default to server1
      - certs.results[3].subject.CN == 'server1.f5.oslbaas.systest' # domain name not found, thus default to server1
      - certs.results[4].subject.CN == 'server1.f5.oslbaas.systest' # domain name not found, thus default to server1

- name: "Check {{ test_listener_protocol }} {{ test_listener_tcpport }} is reachable"
  shell: curl -k https://{{ vip_address.stdout }}:{{ test_listener_tcpport }}
  args:
    warn: no
  delegate_to: "{{ item }}"
  with_items: "{{groups['clients_ipv4']}}"
  when: test_env == 'osp'

- name: "{{ testcasename }}: update listener with tls sni certs"
  # command `neutron lbaas-listener-update` does not support updating tls default/sni certificates.
  # so we need to use neutron v2 rest api within update_tls_listener_with_sni.py script.
  shell: |
    source {{ openrc }} && \
    python /tmp/scripts/update_tls_listener_with_sni.py \
      {{ listener_id }} {{ server_container2_href }} {{ server_container3_href }} &&
    bash /tmp/scripts/wait_assert_lb_active.sh {{ loadbalancer_id }}

- name: Get certs from an https port after tls sni updated
  community.crypto.get_certificate:
    host: "{{ vip_address.stdout }}"
    server_name: server{{ item }}.f5.oslbaas.systest
    port: "{{ test_listener_tcpport }}"
    ca_cert: /tmp/kps/ca.crt
  register: upd_certs
  with_items: "{{ range(1, 6, 1) | list }}"

# - debug: "msg={{ upd_certs }}"
- name: assert server certificate is valid
  assert:
    that:
      - upd_certs.results[0].issuer.C == 'CN'
      - upd_certs.results[0].issuer.O == 'F5China'
      - upd_certs.results[0].issuer.emailAddress == 'a.zong@f5.com'
      - upd_certs.results[0].subject.CN == 'server2.f5.oslbaas.systest' # domain name not found, thus default to server2
      - upd_certs.results[1].subject.CN == 'server2.f5.oslbaas.systest'
      - upd_certs.results[2].subject.CN == 'server3.f5.oslbaas.systest'
      - upd_certs.results[3].subject.CN == 'server2.f5.oslbaas.systest' # domain name not found, thus default to server2
      - upd_certs.results[4].subject.CN == 'server2.f5.oslbaas.systest' # domain name not found, thus default to server2

- import_tasks: ../../playbooks/task-remove-resources.yml
