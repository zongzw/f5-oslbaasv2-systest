

- set_fact:
    test_casename: "mTLS test"
    test_listener_protocol: TERMINATED_HTTPS
    test_pool_protocol: HTTP
    test_listener_tcpport: 443
    test_listener_additional_options: --default-tls-container-ref={{  server_container1_href }} --ca-container-id={{ ca_container_href }} --mutual-authentication-up=True # --sni-container-refs={{ server_container2_href }} 
    test_healthmonitor_protocol: PING
    test_member_tcpport: 80

- import_tasks: ../../playbooks/task-define-resources.yml

- import_tasks: ../../playbooks/task-create-resources.yml

- import_tasks: ../../playbooks/task-get-resourceids.yml

- name: copy certificate files to clients
  copy: src="../conf.d/kps" dest="/tmp" force="yes"
  delegate_to: "{{ item }}"
  with_items: "{{groups['clients_ipv4']}}"

- name: Get information from server certificate
  community.crypto.x509_certificate_info:
    path: ../conf.d/kps/server1.crt
  register: server_cert_info
  delegate_to: localhost

- name: Validate server certificate via openssl s_client
  shell: openssl s_client -connect {{ vip_address.stdout }}:{{ test_listener_tcpport }} || true
  register: server_handshake_info
  delegate_to: localhost

# - debug: msg="{{ server_cert_info }}"
# - debug: msg="{{ server_handshake_info }}"
- assert:
    that:
      - "server_handshake_info.stdout | regex_search(server_cert_info['subject']['commonName']) != None"
      # find the above debug:server_cert_info and openssl s_client to validate more.

# * NSS error -12227 (SSL_ERROR_HANDSHAKE_FAILURE_ALERT)
# * SSL peer was unable to negotiate an acceptable set of security parameters.
# it will turn to normal later(several minutes)
# Reason: make sure bigip time is correct, or the certificate be validated as error because of crt.not_before or crt.not_after.

# use -k to ignore server certificate.
# for server certificate validation, use 'openssl s_client -connect' as above
- name: "Check mtls {{ test_listener_protocol }} {{ test_listener_tcpport }} is reachable"
  shell: curl -k --cert /tmp/kps/client.crt --key /tmp/kps/client.key --cacert /tmp/kps/ca.crt https://{{ vip_address.stdout }}:{{ test_listener_tcpport }} -sv
  args:
    warn: no
  delegate_to: "{{ item }}"
  with_items: "{{groups['clients_ipv4']}}"
  when: test_env == "osp"

- import_tasks: ../../playbooks/task-remove-resources.yml