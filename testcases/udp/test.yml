
- set_fact:
    test_casename: "udp test"
    test_listener_protocol: UDP
    test_listener_tcpport: 5672
    test_healthmonitor_protocol: PING

- import_tasks: ../../playbooks/task-define-resources.yml

- name: "{{ testcasename }}: create loadbalancer"
  shell: |
    source {{ openrc }} && {{ item }}
  with_items:
    - neutron lbaas-loadbalancer-create --name {{ loadbalancer }} {{ loadbalancer_additional_options}} {{ subnet }}

- name: "{{ testcasename }}: create lbaasv2 resources"
  shell: |
    source {{ openrc }} && bash /tmp/scripts/wait_assert_lb_active.sh {{ loadbalancer }} && {{ item }}
  with_items:
    - neutron lbaas-listener-create --name {{ listener }} --loadbalancer {{ loadbalancer }} --protocol {{ listener_protocol }} --protocol-port {{ listener_tcpport }} {{ listener_additional_options }}
    - echo

- name: "{{ testcasename }}: get listener_id"
  shell: |
    source {{ openrc }} && \
      neutron lbaas-listener-show {{ listener }} --format value --column id
  register: listener_id

- set_fact:
    listener_id: "{{ listener_id.stdout }}"

- name: "{{ testcasename }}: get vip address for test"
  shell: |
    source {{ openrc }} && \
      neutron lbaas-loadbalancer-show {{ loadbalancer }} --format value --column vip_address
  register: vip_address
- debug: var=vip_address.stdout

- name: collect resources from bigip
  bigip_device_info:
    gather_subset:
      - virtual-servers
    provider:
      user: admin
      server: "{{ item }}"
      password: "{{ hostvars[item].admin_password }}"
      validate_certs: False
  register: bigip_infos
  with_items: "{{ groups['bigips'] }}"
  delegate_to: localhost

- name: assert virtual server udp protocol
  assert:
    that:
      - "{{ item | json_query(query_string) | length }} == 1"
      - "(item | json_query(query_string))[0].protocol == 'udp'"
    quiet: yes
  vars:
    query_string: "virtual_servers[?name == '{{ environment_prefix}}_{{ listener_id }}']"
  with_items: "{{ bigip_infos.results }}"
  loop_control:
    label: "{{ environment_prefix}}_{{ listener_id }}"
  
  
- name: "{{ testcasename }}: delete lbaasv2 resources"
  shell: |
    source {{ openrc }} && bash /tmp/scripts/wait_assert_lb_active.sh {{ loadbalancer }} && {{ item }}
  with_items:
    - neutron lbaas-listener-delete {{ listener }}
    - neutron lbaas-loadbalancer-delete {{ loadbalancer }}
  when: nodelete is not defined
